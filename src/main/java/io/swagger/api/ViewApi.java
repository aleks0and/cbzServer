/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.2).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.InlineResponse400;
import io.swagger.model.Place;
import io.swagger.model.User;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2018-12-08T19:00:38.207Z[GMT]")

@Api(value = "view", description = "the view API")
public interface ViewApi {

    @ApiOperation(value = "Returns lists of places", nickname = "viewDisabilitiesGet", notes = "Returns list of all places ids", response = Place.class, responseContainer = "List", tags={ "view", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Request success", response = Place.class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "Request failed", response = InlineResponse400.class) })
    @RequestMapping(value = "/view/disabilities",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Place>> viewDisabilitiesGet();


    @ApiOperation(value = "Returns lists of places", nickname = "viewPlacesGet", notes = "Returns list of all places ids", response = Place.class, responseContainer = "List", tags={ "view", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Request success", response = Place.class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "Request failed", response = InlineResponse400.class) })
    @RequestMapping(value = "/view/places",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Place>> viewPlacesGet();


    @ApiOperation(value = "Returns lists of users", nickname = "viewUsersGet", notes = "Returns list of all users", response = User.class, responseContainer = "List", tags={ "view", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Request success", response = User.class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "Request failed", response = InlineResponse400.class) })
    @RequestMapping(value = "/view/users",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<User>> viewUsersGet();

}
