/*
 * CBZ API
 * This is a simple API
 *
 * OpenAPI spec version: 123-oas3
 * Contact: you@your-company.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.model.UserC;
import io.swagger.model.UserS;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Date;
import javax.validation.constraints.*;

/**
 * RegistrationForm
 */
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaJerseyServerCodegen", date = "2018-12-08T14:37:58.127Z[GMT]")public class RegistrationForm   {
  @JsonProperty("userS")
  private UserS userS = null;

  @JsonProperty("userC")
  private UserC userC = null;

  @JsonProperty("timestamp")
  private Date timestamp = null;

  public RegistrationForm userS(UserS userS) {
    this.userS = userS;
    return this;
  }

  /**
   * Get userS
   * @return userS
   **/
  @JsonProperty("userS")
  @Schema(description = "")
  public UserS getUserS() {
    return userS;
  }

  public void setUserS(UserS userS) {
    this.userS = userS;
  }

  public RegistrationForm userC(UserC userC) {
    this.userC = userC;
    return this;
  }

  /**
   * Get userC
   * @return userC
   **/
  @JsonProperty("userC")
  @Schema(description = "")
  public UserC getUserC() {
    return userC;
  }

  public void setUserC(UserC userC) {
    this.userC = userC;
  }

  public RegistrationForm timestamp(Date timestamp) {
    this.timestamp = timestamp;
    return this;
  }

  /**
   * Get timestamp
   * @return timestamp
   **/
  @JsonProperty("timestamp")
  @Schema(description = "")
  public Date getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(Date timestamp) {
    this.timestamp = timestamp;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RegistrationForm registrationForm = (RegistrationForm) o;
    return Objects.equals(this.userS, registrationForm.userS) &&
        Objects.equals(this.userC, registrationForm.userC) &&
        Objects.equals(this.timestamp, registrationForm.timestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userS, userC, timestamp);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RegistrationForm {\n");
    
    sb.append("    userS: ").append(toIndentedString(userS)).append("\n");
    sb.append("    userC: ").append(toIndentedString(userC)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
