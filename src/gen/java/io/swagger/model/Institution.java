/*
 * CBZ API
 * This is a simple API
 *
 * OpenAPI spec version: 123-oas3
 * Contact: you@your-company.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.model.Comment;
import io.swagger.model.DisabilityType;
import io.swagger.model.LocationPoint;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;

/**
 * Institution
 */
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaJerseyServerCodegen", date = "2018-12-08T14:37:58.127Z[GMT]")public class Institution   {
  @JsonProperty("id")
  private String id = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("email")
  private String email = null;

  @JsonProperty("phone")
  private String phone = null;

  @JsonProperty("image")
  private String image = null;

  @JsonProperty("disabilityAvailable")
  private List<DisabilityType> disabilityAvailable = null;

  @JsonProperty("caretaker")
  private String caretaker = null;

  @JsonProperty("location")
  private LocationPoint location = null;

  @JsonProperty("comments")
  private List<Comment> comments = null;

  public Institution id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   **/
  @JsonProperty("id")
  @Schema(required = true, description = "")
  @NotNull
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Institution name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   **/
  @JsonProperty("name")
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Institution email(String email) {
    this.email = email;
    return this;
  }

  /**
   * Get email
   * @return email
   **/
  @JsonProperty("email")
  @Schema(description = "")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public Institution phone(String phone) {
    this.phone = phone;
    return this;
  }

  /**
   * Get phone
   * @return phone
   **/
  @JsonProperty("phone")
  @Schema(description = "")
  public String getPhone() {
    return phone;
  }

  public void setPhone(String phone) {
    this.phone = phone;
  }

  public Institution image(String image) {
    this.image = image;
    return this;
  }

  /**
   * Get image
   * @return image
   **/
  @JsonProperty("image")
  @Schema(description = "")
  public String getImage() {
    return image;
  }

  public void setImage(String image) {
    this.image = image;
  }

  public Institution disabilityAvailable(List<DisabilityType> disabilityAvailable) {
    this.disabilityAvailable = disabilityAvailable;
    return this;
  }

  public Institution addDisabilityAvailableItem(DisabilityType disabilityAvailableItem) {
    if (this.disabilityAvailable == null) {
      this.disabilityAvailable = new ArrayList<DisabilityType>();
    }
    this.disabilityAvailable.add(disabilityAvailableItem);
    return this;
  }

  /**
   * Get disabilityAvailable
   * @return disabilityAvailable
   **/
  @JsonProperty("disabilityAvailable")
  @Schema(description = "")
  public List<DisabilityType> getDisabilityAvailable() {
    return disabilityAvailable;
  }

  public void setDisabilityAvailable(List<DisabilityType> disabilityAvailable) {
    this.disabilityAvailable = disabilityAvailable;
  }

  public Institution caretaker(String caretaker) {
    this.caretaker = caretaker;
    return this;
  }

  /**
   * Id opiekuna placowki
   * @return caretaker
   **/
  @JsonProperty("caretaker")
  @Schema(description = "Id opiekuna placowki")
  public String getCaretaker() {
    return caretaker;
  }

  public void setCaretaker(String caretaker) {
    this.caretaker = caretaker;
  }

  public Institution location(LocationPoint location) {
    this.location = location;
    return this;
  }

  /**
   * Get location
   * @return location
   **/
  @JsonProperty("location")
  @Schema(description = "")
  public LocationPoint getLocation() {
    return location;
  }

  public void setLocation(LocationPoint location) {
    this.location = location;
  }

  public Institution comments(List<Comment> comments) {
    this.comments = comments;
    return this;
  }

  public Institution addCommentsItem(Comment commentsItem) {
    if (this.comments == null) {
      this.comments = new ArrayList<Comment>();
    }
    this.comments.add(commentsItem);
    return this;
  }

  /**
   * Get comments
   * @return comments
   **/
  @JsonProperty("comments")
  @Schema(description = "")
  public List<Comment> getComments() {
    return comments;
  }

  public void setComments(List<Comment> comments) {
    this.comments = comments;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Institution institution = (Institution) o;
    return Objects.equals(this.id, institution.id) &&
        Objects.equals(this.name, institution.name) &&
        Objects.equals(this.email, institution.email) &&
        Objects.equals(this.phone, institution.phone) &&
        Objects.equals(this.image, institution.image) &&
        Objects.equals(this.disabilityAvailable, institution.disabilityAvailable) &&
        Objects.equals(this.caretaker, institution.caretaker) &&
        Objects.equals(this.location, institution.location) &&
        Objects.equals(this.comments, institution.comments);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, email, phone, image, disabilityAvailable, caretaker, location, comments);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Institution {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    disabilityAvailable: ").append(toIndentedString(disabilityAvailable)).append("\n");
    sb.append("    caretaker: ").append(toIndentedString(caretaker)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
