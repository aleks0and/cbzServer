/*
 * CBZ API
 * This is a simple API
 *
 * OpenAPI spec version: 123-oas3
 * Contact: you@your-company.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.model.DisabilityType;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.validation.constraints.*;

/**
 * Comment
 */
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaJerseyServerCodegen", date = "2018-12-08T14:37:58.127Z[GMT]")public class Comment   {
  @JsonProperty("commentContent")
  private String commentContent = null;

  @JsonProperty("date")
  private Date date = null;

  @JsonProperty("userId")
  private String userId = null;

  @JsonProperty("placeID")
  private String placeID = null;

  @JsonProperty("disabilityType")
  private List<DisabilityType> disabilityType = null;

  public Comment commentContent(String commentContent) {
    this.commentContent = commentContent;
    return this;
  }

  /**
   * Get commentContent
   * @return commentContent
   **/
  @JsonProperty("commentContent")
  @Schema(description = "")
  public String getCommentContent() {
    return commentContent;
  }

  public void setCommentContent(String commentContent) {
    this.commentContent = commentContent;
  }

  public Comment date(Date date) {
    this.date = date;
    return this;
  }

  /**
   * Get date
   * @return date
   **/
  @JsonProperty("date")
  @Schema(description = "")
  public Date getDate() {
    return date;
  }

  public void setDate(Date date) {
    this.date = date;
  }

  public Comment userId(String userId) {
    this.userId = userId;
    return this;
  }

  /**
   * Get userId
   * @return userId
   **/
  @JsonProperty("userId")
  @Schema(description = "")
  public String getUserId() {
    return userId;
  }

  public void setUserId(String userId) {
    this.userId = userId;
  }

  public Comment placeID(String placeID) {
    this.placeID = placeID;
    return this;
  }

  /**
   * Get placeID
   * @return placeID
   **/
  @JsonProperty("placeID")
  @Schema(description = "")
  public String getPlaceID() {
    return placeID;
  }

  public void setPlaceID(String placeID) {
    this.placeID = placeID;
  }

  public Comment disabilityType(List<DisabilityType> disabilityType) {
    this.disabilityType = disabilityType;
    return this;
  }

  public Comment addDisabilityTypeItem(DisabilityType disabilityTypeItem) {
    if (this.disabilityType == null) {
      this.disabilityType = new ArrayList<DisabilityType>();
    }
    this.disabilityType.add(disabilityTypeItem);
    return this;
  }

  /**
   * Get disabilityType
   * @return disabilityType
   **/
  @JsonProperty("disabilityType")
  @Schema(description = "")
  public List<DisabilityType> getDisabilityType() {
    return disabilityType;
  }

  public void setDisabilityType(List<DisabilityType> disabilityType) {
    this.disabilityType = disabilityType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Comment comment = (Comment) o;
    return Objects.equals(this.commentContent, comment.commentContent) &&
        Objects.equals(this.date, comment.date) &&
        Objects.equals(this.userId, comment.userId) &&
        Objects.equals(this.placeID, comment.placeID) &&
        Objects.equals(this.disabilityType, comment.disabilityType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(commentContent, date, userId, placeID, disabilityType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Comment {\n");
    
    sb.append("    commentContent: ").append(toIndentedString(commentContent)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    placeID: ").append(toIndentedString(placeID)).append("\n");
    sb.append("    disabilityType: ").append(toIndentedString(disabilityType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
